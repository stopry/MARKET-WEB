/**
 * Created by Alvis on 2017/7/5.
 */
var ajaxHelper = {
    //purl 是接口url
    //data是传入参数
    //callbacl是成功后的回调函数
    //async是同步异步开发，默认异步可不传，如需同步，则必须传false
    //showload 是否展示加载动画
    post: function (purl, data, callback, showLoad, comcall,errcall) {
        if (showLoad == void(0)) {
            showLoad = true;
        }
        $.ajax({
            type: 'POST',
            url: purl,
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(data),
            dataType: 'json',
            success: function (result) {

                var code = result.code;
                if (code == '401') {
                    oauth.clean();
                    layer.confirm('亲爱的玩家，您尚未登陆', {
                        btn: ['去登录'] //按钮
                    }, function () {
                        location.href = '/html/login.html';
                    });
                }
                callback && callback(result);
            },
            error: function (info) {
                if (showLoad) {
                    // $("#ajaxloading").hide();
                    showLoading(false);
                }
                layer.msg(info.state)
                if (info.status == 401) {
                    layer.confirm('亲爱的玩家，您尚未登陆', {
                        btn: ['去登录'] //按钮
                    }, function () {
                        location.href = '/html/login.html';
                    });
                } else {
                    showTips('网络错误','error');
                }
                if(errcall){
                    errcall();
                }
            },
            complete: function (xhr, status) {
                if (showLoad) {
                    showLoading(false);
                    // $("#ajaxloading").hide();
                }
                if(comcall){
                    comcall();
                }
            }, beforeSend: function (request) {
                request.setRequestHeader("Authorization", 'bearer ' + oauth.getToken());
                if (showLoad) {
                    showLoading(true);
                }
            }
        });
    },
    get: function (purl, data, callback, showLoad, async) {
        if (async == void(0)) {
            async = true;
        }
        if (showLoad == void(0)) {
            showLoad = true;
        }
        $.ajax({
            type: 'GET',
            url: purl,
            data: data,
            async: async,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            success: function (result) {
                if (showLoad) {
                    // $("#ajaxloading").hide();
                    showLoading(false);
                }
                var code = result.code;
                if (code == '401') {
                    oauth.clean();
                    layer.confirm('亲爱的玩家，您尚未登陆', {
                        btn: ['去登录'] //按钮
                    }, function () {
                        location.href = '/html/login.html';
                    });
                }
                callback && callback(result);
            },
            error: function (info) {
                if (showLoad) {
                    // $("#ajaxloading").hide();
                    showLoading(false);
                }
                if (info.status == 401) {
                    layer.confirm('亲爱的玩家，您尚未登陆', {
                        btn: ['去登录'] //按钮
                    }, function () {
                        location.href = '/html/login.html';
                    });
                } else {
                    showTips('网络错误','error');
                }
            },
            complete: function (xhr, status) {
                showLoading(false)
            }, beforeSend: function (request) {
                request.setRequestHeader("Authorization", 'bearer ' + oauth.getToken());
                if (showLoad) {
                    // $("#ajaxloading").show();
                    showLoading(true);
                }
            }
        });
    }
};

var Util = {
    getQueryString: function (name) {
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
        var r = window.location.search.substr(1).match(reg);
        if (r != null)return unescape(r[2]);
        return null;
    },
    getQueryParam: function () {
        var paras = [];
        var r = window.location.search;
        if (r.indexOf("?") >= 0) {
            r = r.substr(1);
        }
        var urlStr;
        if (r && r != '') {
            urlStr = r.split('&');
        }
        if (urlStr && urlStr.length > 0) {
            for (var i = 0; i < urlStr.length; i++) {
                var p = urlStr[i].split('=');
                var v = {};
                if (p.length > 1) {
                    v = {key: p[0], val: p[1]};
                } else if (p.length = 1) {
                    v = {key: p[0], val: ''};
                }
                paras.push(v);
            }
        }
        return paras;
    },
    formatDate: function (now) {
        if(null == now){
            return "";
        }
        var year = new Date(now).getFullYear();
        var month = new Date(now).getMonth() + 1 >= 10 ? new Date(now).getMonth() + 1 : '0' + (new Date(now).getMonth() + 1);
        var date = new Date(now).getDate() >= 10 ? new Date(now).getDate() : '0' + new Date(now).getDate();
        var hour = new Date(now).getHours() >= 10 ? new Date(now).getHours() : '0' + new Date(now).getHours();
        var minute = new Date(now).getMinutes() >= 10 ? new Date(now).getMinutes() : '0' + new Date(now).getMinutes();
        var second = new Date(now).getSeconds() >= 10 ? new Date(now).getSeconds() : '0' + new Date(now).getSeconds();
        return year + "-" + month + "-" + date + "&nbsp;&nbsp;" + (hour == '0' ? '00' : hour) + ":" + (minute == '0' ? '00' : minute) + ":" + (second == '0' ? '00' : second);
    },
    isWeiXin: function () {
        var ua = window.navigator.userAgent.toLowerCase();
        if (ua.match(/MicroMessenger/i) == 'micromessenger') {
            return true;
        } else {
            return false;
        }
    },
    checkEquipment: function () {
        var ua = window.navigator.userAgent.toLowerCase();//微信
        var u = navigator.userAgent;//手机类型android或ios
        if (ua.match(/MicroMessenger/i) == 'micromessenger') {//微信
            console.log('微信');
            return 'WX';
        } else if (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1) {//安卓手机
            console.log('android');
            return 'android';
        } else if (u.indexOf('iPhone') > -1) {//苹果手机
            console.log('ios');
            return 'ios';
        } else {//其他设备
            console.log('other');
            return 'other';
        }
    },
    formatMoney: function (amount, len) {
        var a = new Number(amount);
        if (!a) {
            return '0.00';
        } else {
            return a.toFixed(len);
        }
    },
    getFilenameSuffix:function (filename){
        var pos = filename.lastIndexOf('.')
        var suffix = '';
        if (pos != -1) {
            suffix = filename.substring(pos)
        }
        return suffix;
    },
    createUUID: function () {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    },
    checkMobile: function (str) {
        var re = /^1\d{10}$/
        if (re.test(str)) {
            return true;
        } else {
            return false;
        }
    },
    //阿拉伯数字转换为简写汉字
    A2C: function (Num) {
        for (i = Num.length - 1; i >= 0; i--) {
            Num = Num.replace(",", "")//替换Num中的“,”
            Num = Num.replace(" ", "")//替换Num中的空格
        }
        if (isNaN(Num)) { //验证输入的字符是否为数字
            //alert("请检查小写金额是否正确");
            return;
        }
        //字符处理完毕后开始转换，采用前后两部分分别转换
        part = String(Num).split(".");
        newchar = "";
        //小数点前进行转化
        for (i = part[0].length - 1; i >= 0; i--) {
            if (part[0].length > 10) {
                //alert("位数过大，无法计算");
                return "";
            }//若数量超过拾亿单位，提示
            tmpnewchar = ""
            perchar = part[0].charAt(i);
            switch (perchar) {
                case "0":
                    tmpnewchar = "零" + tmpnewchar;
                    break;
                case "1":
                    tmpnewchar = "一" + tmpnewchar;
                    break;
                case "2":
                    tmpnewchar = "二" + tmpnewchar;
                    break;
                case "3":
                    tmpnewchar = "三" + tmpnewchar;
                    break;
                case "4":
                    tmpnewchar = "四" + tmpnewchar;
                    break;
                case "5":
                    tmpnewchar = "五" + tmpnewchar;
                    break;
                case "6":
                    tmpnewchar = "六" + tmpnewchar;
                    break;
                case "7":
                    tmpnewchar = "七" + tmpnewchar;
                    break;
                case "8":
                    tmpnewchar = "八" + tmpnewchar;
                    break;
                case "9":
                    tmpnewchar = "九" + tmpnewchar;
                    break;
            }
            switch (part[0].length - i - 1) {
                case 0:
                    tmpnewchar = tmpnewchar;
                    break;
                case 1:
                    if (perchar != 0) tmpnewchar = tmpnewchar + "十";
                    break;
                case 2:
                    if (perchar != 0) tmpnewchar = tmpnewchar + "百";
                    break;
                case 3:
                    if (perchar != 0) tmpnewchar = tmpnewchar + "千";
                    break;
                case 4:
                    tmpnewchar = tmpnewchar + "万";
                    break;
                case 5:
                    if (perchar != 0) tmpnewchar = tmpnewchar + "十";
                    break;
                case 6:
                    if (perchar != 0) tmpnewchar = tmpnewchar + "百";
                    break;
                case 7:
                    if (perchar != 0) tmpnewchar = tmpnewchar + "千";
                    break;
                case 8:
                    tmpnewchar = tmpnewchar + "亿";
                    break;
                case 9:
                    tmpnewchar = tmpnewchar + "十";
                    break;
            }
            newchar = tmpnewchar + newchar;
        }
        //替换所有无用汉字，直到没有此类无用的数字为止
        while (newchar.search("零零") != -1 || newchar.search("零亿") != -1 || newchar.search("亿万") != -1 || newchar.search("零万") != -1) {
            newchar = newchar.replace("零亿", "亿");
            newchar = newchar.replace("亿万", "亿");
            newchar = newchar.replace("零万", "万");
            newchar = newchar.replace("零零", "零");
        }
        //替换以“一十”开头的，为“十”
        if (newchar.indexOf("一十") == 0) {
            newchar = newchar.substr(1);
        }
        //替换以“零”结尾的，为“”
        if (newchar.lastIndexOf("零") == newchar.length - 1) {
            newchar = newchar.substr(0, newchar.length - 1);
        }
        return newchar;
    },
    formatMobile: function (mobile) {
        var eIndex = mobile.length - 4 < 0 ? 0 : mobile.length - 4;
        return mobile.substr(0, 3) + "****" + mobile.substr(eIndex);
    },
    get_filename_suffix: function (filename) {
        pos = filename.lastIndexOf('.')
        suffix = ''
        if (pos != -1) {
            suffix = filename.substring(pos)
        }
        return suffix;
    }
}

var oauth = {
    getToken: function () {
        var token = localStorage.getItem('AUTHORIZATION');
        return token;
    },
    setToken: function (token) {
        localStorage.setItem('AUTHORIZATION', token);
    },
    clean: function () {
        localStorage.removeItem('AUTHORIZATION');
    },
    check: function (succ, error) {
        $.ajax({
            type: 'GET',
            url: getUrl('security/checkAuth'),
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            success: function (result) {
                var code = result.code;
                if (code == '401') {
                    oauth.clean();
                }
                succ && succ(result);
            },
            error: function (info) {
                var code = info.code;
                if (code == '401') {
                    oauth.clean();
                }
                error && error(info);
            },
            complete: function (xhr, status) {

            }, beforeSend: function (request) {
                request.setRequestHeader("Authorization", 'bearer ' + oauth.getToken());
            }
        });
    }

}


Date.prototype.Format = function (fmt) { //author: meizz
    var o = {
        "M+": this.getMonth() + 1, //月份
        "d+": this.getDate(), //日
        "h+": this.getHours(), //小时
        "m+": this.getMinutes(), //分
        "s+": this.getSeconds(), //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}

var Lock = {
    createNew: function () {
        var lock = {};
        lock.flag = true;
        lock.lockCnt = 0;
        lock.releaseCnt = 0;
        /**
         * 获取锁
         * @returns {boolean}
         */
        lock.getLock = function (timeout) {
            timeout = timeout||10*1000;
            if (lock.flag) {
                lock.flag = false;
                lock.lockCnt++;
                // 10秒后检查，未释放时将自动释放
                setTimeout(function () {
                    if (!lock.flag && lock.lockCnt - lock.releaseCnt == 1) {
                        lock.flag = true;
                        lock.releaseCnt++;
                    }
                }, timeout);
                return true;
            } else {
                return false;
            }
        };
        /**
         * 释放锁
         */
        lock.release = function () {
            if (!lock.flag) {
                lock.flag = true;
                lock.releaseCnt++;
            }
        }
        return lock;
    }

}

var FormUtil = {
    getParaVal: function (str) {
        var ret = $.trim($(str).val());
        if (!ret || ret == '' || ret == undefined) {
            return null;
        }
        return ret;
    },
    getParaValNum: function (str) {
        try {
            var ret = $.trim($(str).val());
            if (!ret || ret == '' || ret == undefined) {
                return 0;
            }
            return parseFloat(ret);
        } catch (e) {
            return 0;
        }
    },
    getParaHtml: function () {
        var ret = $.trim($(str).html());
        if (!ret || ret == '' || ret == undefined) {
            return null;
        }
        return ret;
    }
}

function getUrl(url) {
    return '/market/' + url;
}
$(function(){
    $('input:not([autocomplete]),textarea:not([autocomplete]),select:not([autocomplete])').attr('autocomplete', 'off');

   var lasttime=localStorage.getItem('refreshToken_time');
   var nowtime=new Date().getTime();
   if(null == lasttime || nowtime-lasttime>=5*60*1000){
        refreshToken();
   }

    //5分钟一次
    setInterval(refreshToken,5*60*1000);
});


function refreshToken() {
    var token = oauth.getToken();
    ajaxHelper.post(getUrl('oauth/refreshToken'), token, function (ret) {
        if (ret.success) {
            var data = ret.obj;
            token=data.accessToken;
            oauth.setToken(token);
            localStorage.setItem('refreshToken_time', new Date().getTime());
        }else {
            oauth.clean();
        }
    },false,function () {
        isLoading = false;
    },function () {
        isLoading = false;
    });

}

function showEnTyep(type) {
    if (type == '0') {
        return '买';
    } else if (type == '1') {
        return '卖';
    }
}

function showTrStatus(type) {
    if (type == '0') {
        return '未确定';
    } else if (type == '1') {
        return '未成交';
    } else if (type == '2') {
        return '部分成交';
    } else if (type == '3') {
        return '完全成交';
    } else if (type == '4') {
        return '手动撤消';
    } else if (type == '5') {
        return '系统撤消';
    }else if (type == '6') {
        return '异常撤消';
    }
}


function showWithdrawStatus(type) {
    if (type == '0') {
        return '待审核';
    } else if (type == '1') {
        return '已审核';
    } else if (type == '2') {
        return '转账中';
    } else if (type == '3') {
        return '完成';
    } else if (type == '4') {
        return '已撤消';
    } else if (type == '5') {
        return '失败';
    }
}

function showPayChannel(type){
    if (type == '1') {
        return '微信';
    } else if (type == '2') {
        return '支付宝';
    } else if (type == '3') {
        return '银联';
    } else if (type == '4') {
        return '收钱吧';
    }
}

function showRechargeStatus(type){
    if (type == '0') {
        return '未处理';
    } else if (type == '1') {
        return '支付成功';
    } else if (type == '2') {
        return '支付失败';
    } else if (type == '3') {
        return '支付超时';
    }
}

function changeToPercent(num) {
    return  parseFloat(num*100) + '%';
}